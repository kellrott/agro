# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: agro.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='agro.proto',
  package='agro_pb',
  syntax='proto2',
  serialized_pb=b'\n\nagro.proto\x12\x07\x61gro_pb\"\xe0\x01\n\x04Task\x12\n\n\x02id\x18\x01 \x02(\t\x12\x14\n\x0ctask_depends\x18\x02 \x03(\t\x12\x0f\n\x07\x63ommand\x18\x03 \x02(\t\x12\"\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x14.agro_pb.CmdArgument\x12\x11\n\tcontainer\x18\x05 \x01(\t\x12\x0c\n\x04tags\x18\x06 \x03(\t\x12.\n\x0crequirements\x18\x07 \x03(\x0b\x32\x18.agro_pb.TaskRequirement\x12\x1d\n\x05state\x18\x08 \x01(\x0e\x32\x0e.agro_pb.State\x12\x11\n\tmax_retry\x18\t \x01(\x05\"\xe9\x01\n\x03Job\x12\n\n\x02id\x18\x01 \x02(\t\x12\x0f\n\x07task_id\x18\x02 \x02(\t\x12\x0f\n\x07\x63ommand\x18\x03 \x02(\t\x12\"\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x14.agro_pb.CmdArgument\x12\x11\n\tcontainer\x18\x05 \x01(\t\x12.\n\x0crequirements\x18\x06 \x03(\x0b\x32\x18.agro_pb.TaskRequirement\x12\x1d\n\x05state\x18\x07 \x02(\x0e\x32\x0e.agro_pb.State\x12\x0e\n\x06stdout\x18\x08 \x01(\t\x12\x0e\n\x06stderr\x18\t \x01(\t\x12\x0e\n\x06worker\x18\n \x01(\t\"6\n\tJobStatus\x12\n\n\x02id\x18\x01 \x02(\t\x12\x1d\n\x05state\x18\x02 \x02(\x0e\x32\x0e.agro_pb.State\"\\\n\nTaskStatus\x12\n\n\x02id\x18\x01 \x02(\t\x12\x1d\n\x05state\x18\x02 \x02(\x0e\x32\x0e.agro_pb.State\x12\x15\n\rcompleted_job\x18\x03 \x01(\t\x12\x0c\n\x04runs\x18\x04 \x03(\t\".\n\x0fTaskRequirement\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t\"P\n\x0b\x43mdArgument\x12\r\n\x03\x61rg\x18\x01 \x01(\tH\x00\x12)\n\x08\x66ile_arg\x18\x02 \x01(\x0b\x32\x15.agro_pb.FileArgumentH\x00\x42\x07\n\x05Value\"\xdc\x01\n\x0c\x46ileArgument\x12\n\n\x02id\x18\x01 \x02(\t\x12\r\n\x05input\x18\x02 \x02(\x08\x12/\n\x04type\x18\x03 \x02(\x0e\x32!.agro_pb.FileArgument.FileArgType\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x10\n\x08name_key\x18\x05 \x01(\t\x12\x0e\n\x06silent\x18\x06 \x01(\x08\"P\n\x0b\x46ileArgType\x12\x08\n\x04PATH\x10\x01\x12\t\n\x05NAMED\x10\x02\x12\t\n\x05REGEX\x10\x03\x12\n\n\x06STDOUT\x10\x04\x12\n\n\x06STDERR\x10\x05\x12\t\n\x05STDIN\x10\x06\"\x18\n\x08TagArray\x12\x0c\n\x04tags\x18\x01 \x03(\t\"\x16\n\x07IDQuery\x12\x0b\n\x03ids\x18\x01 \x03(\t\"R\n\x12UpdateStateRequest\x12\n\n\x02id\x18\x01 \x02(\t\x12\x1d\n\x05state\x18\x02 \x02(\x0e\x32\x0e.agro_pb.State\x12\x11\n\tworker_id\x18\x03 \x01(\t\"4\n\x06JobLog\x12\n\n\x02id\x18\x01 \x02(\t\x12\x0e\n\x06stdout\x18\x02 \x02(\x0c\x12\x0e\n\x06stderr\x18\x03 \x02(\x0c\":\n\nJobRequest\x12\x11\n\tworker_id\x18\x01 \x02(\t\x12\x0b\n\x03max\x18\x02 \x02(\x05\x12\x0c\n\x04tags\x18\x03 \x03(\t\"A\n\tDataBlock\x12\n\n\x02id\x18\x01 \x02(\t\x12\r\n\x05start\x18\x02 \x02(\x03\x12\x0b\n\x03len\x18\x03 \x02(\x03\x12\x0c\n\x04\x64\x61ta\x18\x04 \x02(\x0c\"_\n\x08\x46ileInfo\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\n\n\x02id\x18\x02 \x02(\t\x12\x0c\n\x04size\x18\x03 \x01(\x03\x12\x0c\n\x04urls\x18\x04 \x03(\t\x12\x1d\n\x05state\x18\x05 \x01(\x0e\x32\x0e.agro_pb.State\"\xa4\x01\n\x05\x46ield\x12\x0c\n\x04path\x18\x01 \x03(\t\x12\x13\n\tstr_value\x18\x02 \x01(\tH\x00\x12\x13\n\tint_value\x18\x03 \x01(\x03H\x00\x12\x15\n\x0b\x66loat_value\x18\x04 \x01(\x01H\x00\x12\x14\n\nbool_value\x18\x05 \x01(\x08H\x00\x12\x16\n\x0clist_declare\x18\x06 \x01(\x03H\x00\x12\x15\n\x0bmap_declare\x18\x07 \x01(\x03H\x00\x42\x07\n\x05Value\"6\n\x08\x44ocument\x12\n\n\x02id\x18\x01 \x02(\t\x12\x1e\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x0e.agro_pb.Field\"\x14\n\x06\x46ileID\x12\n\n\x02id\x18\x01 \x02(\t\"*\n\tFileState\x12\x1d\n\x05state\x18\x01 \x02(\x0e\x32\x0e.agro_pb.State\"6\n\x0bReadRequest\x12\n\n\x02id\x18\x01 \x02(\t\x12\r\n\x05start\x18\x02 \x02(\x03\x12\x0c\n\x04size\x18\x03 \x02(\x03*W\n\x05State\x12\t\n\x05\x45RROR\x10\x00\x12\x0b\n\x07WAITING\x10\x01\x12\t\n\x05READY\x10\x02\x12\n\n\x06PAUSED\x10\x03\x12\n\n\x06QUEUED\x10\x04\x12\x0b\n\x07RUNNING\x10\x05\x12\x06\n\x02OK\x10\x06\x32\x97\x03\n\tScheduler\x12\x34\n\x0bGetJobToRun\x12\x13.agro_pb.JobRequest\x1a\x0c.agro_pb.Job\"\x00\x30\x01\x12\x33\n\nSetJobLogs\x12\x0f.agro_pb.JobLog\x1a\x12.agro_pb.JobStatus\"\x00\x12\x33\n\x0bSearchTasks\x12\x11.agro_pb.TagArray\x1a\r.agro_pb.Task\"\x00\x30\x01\x12/\n\x07\x41\x64\x64Task\x12\r.agro_pb.Task\x1a\x13.agro_pb.TaskStatus\"\x00\x12:\n\rGetTaskStatus\x12\x10.agro_pb.IDQuery\x1a\x13.agro_pb.TaskStatus\"\x00\x30\x01\x12\x38\n\x0cGetJobStatus\x12\x10.agro_pb.IDQuery\x1a\x12.agro_pb.JobStatus\"\x00\x30\x01\x12\x43\n\x0eUpdateJobState\x12\x1b.agro_pb.UpdateStateRequest\x1a\x12.agro_pb.JobStatus\"\x00\x32\xa0\x04\n\tFileStore\x12\x34\n\tCreateDoc\x12\x11.agro_pb.Document\x1a\x12.agro_pb.FileState\"\x00\x12.\n\x06GetDoc\x12\x0f.agro_pb.FileID\x1a\x11.agro_pb.Document\"\x00\x12\x34\n\tUpdateDoc\x12\x11.agro_pb.Document\x1a\x12.agro_pb.FileState\"\x00\x12\x32\n\tDeleteDoc\x12\x0f.agro_pb.FileID\x1a\x12.agro_pb.FileState\"\x00\x12\x35\n\nCreateFile\x12\x11.agro_pb.FileInfo\x1a\x12.agro_pb.FileState\"\x00\x12\x35\n\tWriteFile\x12\x12.agro_pb.DataBlock\x1a\x12.agro_pb.FileState\"\x00\x12\x33\n\nCommitFile\x12\x0f.agro_pb.FileID\x1a\x12.agro_pb.FileState\"\x00\x12\x33\n\x0bGetFileInfo\x12\x0f.agro_pb.FileID\x1a\x11.agro_pb.FileInfo\"\x00\x12\x36\n\x08ReadFile\x12\x14.agro_pb.ReadRequest\x1a\x12.agro_pb.DataBlock\"\x00\x12\x33\n\nDeleteFile\x12\x0f.agro_pb.FileID\x1a\x12.agro_pb.FileState\"\x00'
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='agro_pb.State',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WAITING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='READY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PAUSED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUEUED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OK', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1746,
  serialized_end=1833,
)
_sym_db.RegisterEnumDescriptor(_STATE)

State = enum_type_wrapper.EnumTypeWrapper(_STATE)
ERROR = 0
WAITING = 1
READY = 2
PAUSED = 3
QUEUED = 4
RUNNING = 5
OK = 6


_FILEARGUMENT_FILEARGTYPE = _descriptor.EnumDescriptor(
  name='FileArgType',
  full_name='agro_pb.FileArgument.FileArgType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PATH', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAMED', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REGEX', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STDOUT', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STDERR', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STDIN', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=907,
  serialized_end=987,
)
_sym_db.RegisterEnumDescriptor(_FILEARGUMENT_FILEARGTYPE)


_TASK = _descriptor.Descriptor(
  name='Task',
  full_name='agro_pb.Task',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.Task.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_depends', full_name='agro_pb.Task.task_depends', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='command', full_name='agro_pb.Task.command', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='args', full_name='agro_pb.Task.args', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='container', full_name='agro_pb.Task.container', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='agro_pb.Task.tags', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requirements', full_name='agro_pb.Task.requirements', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='agro_pb.Task.state', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_retry', full_name='agro_pb.Task.max_retry', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=248,
)


_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='agro_pb.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.Job.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_id', full_name='agro_pb.Job.task_id', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='command', full_name='agro_pb.Job.command', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='args', full_name='agro_pb.Job.args', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='container', full_name='agro_pb.Job.container', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requirements', full_name='agro_pb.Job.requirements', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='agro_pb.Job.state', index=6,
      number=7, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stdout', full_name='agro_pb.Job.stdout', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stderr', full_name='agro_pb.Job.stderr', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='worker', full_name='agro_pb.Job.worker', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=484,
)


_JOBSTATUS = _descriptor.Descriptor(
  name='JobStatus',
  full_name='agro_pb.JobStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.JobStatus.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='agro_pb.JobStatus.state', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=486,
  serialized_end=540,
)


_TASKSTATUS = _descriptor.Descriptor(
  name='TaskStatus',
  full_name='agro_pb.TaskStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.TaskStatus.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='agro_pb.TaskStatus.state', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='completed_job', full_name='agro_pb.TaskStatus.completed_job', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runs', full_name='agro_pb.TaskStatus.runs', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=542,
  serialized_end=634,
)


_TASKREQUIREMENT = _descriptor.Descriptor(
  name='TaskRequirement',
  full_name='agro_pb.TaskRequirement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='agro_pb.TaskRequirement.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='agro_pb.TaskRequirement.value', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=636,
  serialized_end=682,
)


_CMDARGUMENT = _descriptor.Descriptor(
  name='CmdArgument',
  full_name='agro_pb.CmdArgument',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='arg', full_name='agro_pb.CmdArgument.arg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_arg', full_name='agro_pb.CmdArgument.file_arg', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Value', full_name='agro_pb.CmdArgument.Value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=684,
  serialized_end=764,
)


_FILEARGUMENT = _descriptor.Descriptor(
  name='FileArgument',
  full_name='agro_pb.FileArgument',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.FileArgument.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='agro_pb.FileArgument.input', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='agro_pb.FileArgument.type', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='agro_pb.FileArgument.name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name_key', full_name='agro_pb.FileArgument.name_key', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='silent', full_name='agro_pb.FileArgument.silent', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FILEARGUMENT_FILEARGTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=767,
  serialized_end=987,
)


_TAGARRAY = _descriptor.Descriptor(
  name='TagArray',
  full_name='agro_pb.TagArray',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tags', full_name='agro_pb.TagArray.tags', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=989,
  serialized_end=1013,
)


_IDQUERY = _descriptor.Descriptor(
  name='IDQuery',
  full_name='agro_pb.IDQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='agro_pb.IDQuery.ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1015,
  serialized_end=1037,
)


_UPDATESTATEREQUEST = _descriptor.Descriptor(
  name='UpdateStateRequest',
  full_name='agro_pb.UpdateStateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.UpdateStateRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='agro_pb.UpdateStateRequest.state', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='worker_id', full_name='agro_pb.UpdateStateRequest.worker_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1039,
  serialized_end=1121,
)


_JOBLOG = _descriptor.Descriptor(
  name='JobLog',
  full_name='agro_pb.JobLog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.JobLog.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stdout', full_name='agro_pb.JobLog.stdout', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stderr', full_name='agro_pb.JobLog.stderr', index=2,
      number=3, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1123,
  serialized_end=1175,
)


_JOBREQUEST = _descriptor.Descriptor(
  name='JobRequest',
  full_name='agro_pb.JobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='worker_id', full_name='agro_pb.JobRequest.worker_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='agro_pb.JobRequest.max', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='agro_pb.JobRequest.tags', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1177,
  serialized_end=1235,
)


_DATABLOCK = _descriptor.Descriptor(
  name='DataBlock',
  full_name='agro_pb.DataBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.DataBlock.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='agro_pb.DataBlock.start', index=1,
      number=2, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='len', full_name='agro_pb.DataBlock.len', index=2,
      number=3, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='agro_pb.DataBlock.data', index=3,
      number=4, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1237,
  serialized_end=1302,
)


_FILEINFO = _descriptor.Descriptor(
  name='FileInfo',
  full_name='agro_pb.FileInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='agro_pb.FileInfo.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.FileInfo.id', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='agro_pb.FileInfo.size', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='urls', full_name='agro_pb.FileInfo.urls', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='agro_pb.FileInfo.state', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1304,
  serialized_end=1399,
)


_FIELD = _descriptor.Descriptor(
  name='Field',
  full_name='agro_pb.Field',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='agro_pb.Field.path', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='str_value', full_name='agro_pb.Field.str_value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='int_value', full_name='agro_pb.Field.int_value', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='float_value', full_name='agro_pb.Field.float_value', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bool_value', full_name='agro_pb.Field.bool_value', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='list_declare', full_name='agro_pb.Field.list_declare', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_declare', full_name='agro_pb.Field.map_declare', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Value', full_name='agro_pb.Field.Value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1402,
  serialized_end=1566,
)


_DOCUMENT = _descriptor.Descriptor(
  name='Document',
  full_name='agro_pb.Document',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.Document.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='agro_pb.Document.fields', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1568,
  serialized_end=1622,
)


_FILEID = _descriptor.Descriptor(
  name='FileID',
  full_name='agro_pb.FileID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.FileID.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1624,
  serialized_end=1644,
)


_FILESTATE = _descriptor.Descriptor(
  name='FileState',
  full_name='agro_pb.FileState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='agro_pb.FileState.state', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1646,
  serialized_end=1688,
)


_READREQUEST = _descriptor.Descriptor(
  name='ReadRequest',
  full_name='agro_pb.ReadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='agro_pb.ReadRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='agro_pb.ReadRequest.start', index=1,
      number=2, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='agro_pb.ReadRequest.size', index=2,
      number=3, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1690,
  serialized_end=1744,
)

_TASK.fields_by_name['args'].message_type = _CMDARGUMENT
_TASK.fields_by_name['requirements'].message_type = _TASKREQUIREMENT
_TASK.fields_by_name['state'].enum_type = _STATE
_JOB.fields_by_name['args'].message_type = _CMDARGUMENT
_JOB.fields_by_name['requirements'].message_type = _TASKREQUIREMENT
_JOB.fields_by_name['state'].enum_type = _STATE
_JOBSTATUS.fields_by_name['state'].enum_type = _STATE
_TASKSTATUS.fields_by_name['state'].enum_type = _STATE
_CMDARGUMENT.fields_by_name['file_arg'].message_type = _FILEARGUMENT
_CMDARGUMENT.oneofs_by_name['Value'].fields.append(
  _CMDARGUMENT.fields_by_name['arg'])
_CMDARGUMENT.fields_by_name['arg'].containing_oneof = _CMDARGUMENT.oneofs_by_name['Value']
_CMDARGUMENT.oneofs_by_name['Value'].fields.append(
  _CMDARGUMENT.fields_by_name['file_arg'])
_CMDARGUMENT.fields_by_name['file_arg'].containing_oneof = _CMDARGUMENT.oneofs_by_name['Value']
_FILEARGUMENT.fields_by_name['type'].enum_type = _FILEARGUMENT_FILEARGTYPE
_FILEARGUMENT_FILEARGTYPE.containing_type = _FILEARGUMENT
_UPDATESTATEREQUEST.fields_by_name['state'].enum_type = _STATE
_FILEINFO.fields_by_name['state'].enum_type = _STATE
_FIELD.oneofs_by_name['Value'].fields.append(
  _FIELD.fields_by_name['str_value'])
_FIELD.fields_by_name['str_value'].containing_oneof = _FIELD.oneofs_by_name['Value']
_FIELD.oneofs_by_name['Value'].fields.append(
  _FIELD.fields_by_name['int_value'])
_FIELD.fields_by_name['int_value'].containing_oneof = _FIELD.oneofs_by_name['Value']
_FIELD.oneofs_by_name['Value'].fields.append(
  _FIELD.fields_by_name['float_value'])
_FIELD.fields_by_name['float_value'].containing_oneof = _FIELD.oneofs_by_name['Value']
_FIELD.oneofs_by_name['Value'].fields.append(
  _FIELD.fields_by_name['bool_value'])
_FIELD.fields_by_name['bool_value'].containing_oneof = _FIELD.oneofs_by_name['Value']
_FIELD.oneofs_by_name['Value'].fields.append(
  _FIELD.fields_by_name['list_declare'])
_FIELD.fields_by_name['list_declare'].containing_oneof = _FIELD.oneofs_by_name['Value']
_FIELD.oneofs_by_name['Value'].fields.append(
  _FIELD.fields_by_name['map_declare'])
_FIELD.fields_by_name['map_declare'].containing_oneof = _FIELD.oneofs_by_name['Value']
_DOCUMENT.fields_by_name['fields'].message_type = _FIELD
_FILESTATE.fields_by_name['state'].enum_type = _STATE
DESCRIPTOR.message_types_by_name['Task'] = _TASK
DESCRIPTOR.message_types_by_name['Job'] = _JOB
DESCRIPTOR.message_types_by_name['JobStatus'] = _JOBSTATUS
DESCRIPTOR.message_types_by_name['TaskStatus'] = _TASKSTATUS
DESCRIPTOR.message_types_by_name['TaskRequirement'] = _TASKREQUIREMENT
DESCRIPTOR.message_types_by_name['CmdArgument'] = _CMDARGUMENT
DESCRIPTOR.message_types_by_name['FileArgument'] = _FILEARGUMENT
DESCRIPTOR.message_types_by_name['TagArray'] = _TAGARRAY
DESCRIPTOR.message_types_by_name['IDQuery'] = _IDQUERY
DESCRIPTOR.message_types_by_name['UpdateStateRequest'] = _UPDATESTATEREQUEST
DESCRIPTOR.message_types_by_name['JobLog'] = _JOBLOG
DESCRIPTOR.message_types_by_name['JobRequest'] = _JOBREQUEST
DESCRIPTOR.message_types_by_name['DataBlock'] = _DATABLOCK
DESCRIPTOR.message_types_by_name['FileInfo'] = _FILEINFO
DESCRIPTOR.message_types_by_name['Field'] = _FIELD
DESCRIPTOR.message_types_by_name['Document'] = _DOCUMENT
DESCRIPTOR.message_types_by_name['FileID'] = _FILEID
DESCRIPTOR.message_types_by_name['FileState'] = _FILESTATE
DESCRIPTOR.message_types_by_name['ReadRequest'] = _READREQUEST
DESCRIPTOR.enum_types_by_name['State'] = _STATE

Task = _reflection.GeneratedProtocolMessageType('Task', (_message.Message,), dict(
  DESCRIPTOR = _TASK,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.Task)
  ))
_sym_db.RegisterMessage(Task)

Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(
  DESCRIPTOR = _JOB,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.Job)
  ))
_sym_db.RegisterMessage(Job)

JobStatus = _reflection.GeneratedProtocolMessageType('JobStatus', (_message.Message,), dict(
  DESCRIPTOR = _JOBSTATUS,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.JobStatus)
  ))
_sym_db.RegisterMessage(JobStatus)

TaskStatus = _reflection.GeneratedProtocolMessageType('TaskStatus', (_message.Message,), dict(
  DESCRIPTOR = _TASKSTATUS,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.TaskStatus)
  ))
_sym_db.RegisterMessage(TaskStatus)

TaskRequirement = _reflection.GeneratedProtocolMessageType('TaskRequirement', (_message.Message,), dict(
  DESCRIPTOR = _TASKREQUIREMENT,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.TaskRequirement)
  ))
_sym_db.RegisterMessage(TaskRequirement)

CmdArgument = _reflection.GeneratedProtocolMessageType('CmdArgument', (_message.Message,), dict(
  DESCRIPTOR = _CMDARGUMENT,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.CmdArgument)
  ))
_sym_db.RegisterMessage(CmdArgument)

FileArgument = _reflection.GeneratedProtocolMessageType('FileArgument', (_message.Message,), dict(
  DESCRIPTOR = _FILEARGUMENT,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.FileArgument)
  ))
_sym_db.RegisterMessage(FileArgument)

TagArray = _reflection.GeneratedProtocolMessageType('TagArray', (_message.Message,), dict(
  DESCRIPTOR = _TAGARRAY,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.TagArray)
  ))
_sym_db.RegisterMessage(TagArray)

IDQuery = _reflection.GeneratedProtocolMessageType('IDQuery', (_message.Message,), dict(
  DESCRIPTOR = _IDQUERY,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.IDQuery)
  ))
_sym_db.RegisterMessage(IDQuery)

UpdateStateRequest = _reflection.GeneratedProtocolMessageType('UpdateStateRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATESTATEREQUEST,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.UpdateStateRequest)
  ))
_sym_db.RegisterMessage(UpdateStateRequest)

JobLog = _reflection.GeneratedProtocolMessageType('JobLog', (_message.Message,), dict(
  DESCRIPTOR = _JOBLOG,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.JobLog)
  ))
_sym_db.RegisterMessage(JobLog)

JobRequest = _reflection.GeneratedProtocolMessageType('JobRequest', (_message.Message,), dict(
  DESCRIPTOR = _JOBREQUEST,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.JobRequest)
  ))
_sym_db.RegisterMessage(JobRequest)

DataBlock = _reflection.GeneratedProtocolMessageType('DataBlock', (_message.Message,), dict(
  DESCRIPTOR = _DATABLOCK,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.DataBlock)
  ))
_sym_db.RegisterMessage(DataBlock)

FileInfo = _reflection.GeneratedProtocolMessageType('FileInfo', (_message.Message,), dict(
  DESCRIPTOR = _FILEINFO,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.FileInfo)
  ))
_sym_db.RegisterMessage(FileInfo)

Field = _reflection.GeneratedProtocolMessageType('Field', (_message.Message,), dict(
  DESCRIPTOR = _FIELD,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.Field)
  ))
_sym_db.RegisterMessage(Field)

Document = _reflection.GeneratedProtocolMessageType('Document', (_message.Message,), dict(
  DESCRIPTOR = _DOCUMENT,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.Document)
  ))
_sym_db.RegisterMessage(Document)

FileID = _reflection.GeneratedProtocolMessageType('FileID', (_message.Message,), dict(
  DESCRIPTOR = _FILEID,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.FileID)
  ))
_sym_db.RegisterMessage(FileID)

FileState = _reflection.GeneratedProtocolMessageType('FileState', (_message.Message,), dict(
  DESCRIPTOR = _FILESTATE,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.FileState)
  ))
_sym_db.RegisterMessage(FileState)

ReadRequest = _reflection.GeneratedProtocolMessageType('ReadRequest', (_message.Message,), dict(
  DESCRIPTOR = _READREQUEST,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.ReadRequest)
  ))
_sym_db.RegisterMessage(ReadRequest)


import abc
from grpc.beta import implementations as beta_implementations
from grpc.early_adopter import implementations as early_adopter_implementations
from grpc.framework.alpha import utilities as alpha_utilities
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
class EarlyAdopterSchedulerServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetJobToRun(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SetJobLogs(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SearchTasks(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def AddTask(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetTaskStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetJobStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def UpdateJobState(self, request, context):
    raise NotImplementedError()
class EarlyAdopterSchedulerServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterSchedulerStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetJobToRun(self, request):
    raise NotImplementedError()
  GetJobToRun.async = None
  @abc.abstractmethod
  def SetJobLogs(self, request):
    raise NotImplementedError()
  SetJobLogs.async = None
  @abc.abstractmethod
  def SearchTasks(self, request):
    raise NotImplementedError()
  SearchTasks.async = None
  @abc.abstractmethod
  def AddTask(self, request):
    raise NotImplementedError()
  AddTask.async = None
  @abc.abstractmethod
  def GetTaskStatus(self, request):
    raise NotImplementedError()
  GetTaskStatus.async = None
  @abc.abstractmethod
  def GetJobStatus(self, request):
    raise NotImplementedError()
  GetJobStatus.async = None
  @abc.abstractmethod
  def UpdateJobState(self, request):
    raise NotImplementedError()
  UpdateJobState.async = None
def early_adopter_create_Scheduler_server(servicer, port, private_key=None, certificate_chain=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  method_service_descriptions = {
    "AddTask": alpha_utilities.unary_unary_service_description(
      servicer.AddTask,
      agro_pb2.Task.FromString,
      agro_pb2.TaskStatus.SerializeToString,
    ),
    "GetJobStatus": alpha_utilities.unary_stream_service_description(
      servicer.GetJobStatus,
      agro_pb2.IDQuery.FromString,
      agro_pb2.JobStatus.SerializeToString,
    ),
    "GetJobToRun": alpha_utilities.unary_stream_service_description(
      servicer.GetJobToRun,
      agro_pb2.JobRequest.FromString,
      agro_pb2.Job.SerializeToString,
    ),
    "GetTaskStatus": alpha_utilities.unary_stream_service_description(
      servicer.GetTaskStatus,
      agro_pb2.IDQuery.FromString,
      agro_pb2.TaskStatus.SerializeToString,
    ),
    "SearchTasks": alpha_utilities.unary_stream_service_description(
      servicer.SearchTasks,
      agro_pb2.TagArray.FromString,
      agro_pb2.Task.SerializeToString,
    ),
    "SetJobLogs": alpha_utilities.unary_unary_service_description(
      servicer.SetJobLogs,
      agro_pb2.JobLog.FromString,
      agro_pb2.JobStatus.SerializeToString,
    ),
    "UpdateJobState": alpha_utilities.unary_unary_service_description(
      servicer.UpdateJobState,
      agro_pb2.UpdateStateRequest.FromString,
      agro_pb2.JobStatus.SerializeToString,
    ),
  }
  return early_adopter_implementations.server("agro_pb.Scheduler", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_Scheduler_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  method_invocation_descriptions = {
    "AddTask": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.Task.SerializeToString,
      agro_pb2.TaskStatus.FromString,
    ),
    "GetJobStatus": alpha_utilities.unary_stream_invocation_description(
      agro_pb2.IDQuery.SerializeToString,
      agro_pb2.JobStatus.FromString,
    ),
    "GetJobToRun": alpha_utilities.unary_stream_invocation_description(
      agro_pb2.JobRequest.SerializeToString,
      agro_pb2.Job.FromString,
    ),
    "GetTaskStatus": alpha_utilities.unary_stream_invocation_description(
      agro_pb2.IDQuery.SerializeToString,
      agro_pb2.TaskStatus.FromString,
    ),
    "SearchTasks": alpha_utilities.unary_stream_invocation_description(
      agro_pb2.TagArray.SerializeToString,
      agro_pb2.Task.FromString,
    ),
    "SetJobLogs": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.JobLog.SerializeToString,
      agro_pb2.JobStatus.FromString,
    ),
    "UpdateJobState": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.UpdateStateRequest.SerializeToString,
      agro_pb2.JobStatus.FromString,
    ),
  }
  return early_adopter_implementations.stub("agro_pb.Scheduler", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)

class BetaSchedulerServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetJobToRun(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SetJobLogs(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SearchTasks(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def AddTask(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetTaskStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetJobStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def UpdateJobState(self, request, context):
    raise NotImplementedError()

class BetaSchedulerStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetJobToRun(self, request, timeout):
    raise NotImplementedError()
  @abc.abstractmethod
  def SetJobLogs(self, request, timeout):
    raise NotImplementedError()
  SetJobLogs.future = None
  @abc.abstractmethod
  def SearchTasks(self, request, timeout):
    raise NotImplementedError()
  @abc.abstractmethod
  def AddTask(self, request, timeout):
    raise NotImplementedError()
  AddTask.future = None
  @abc.abstractmethod
  def GetTaskStatus(self, request, timeout):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetJobStatus(self, request, timeout):
    raise NotImplementedError()
  @abc.abstractmethod
  def UpdateJobState(self, request, timeout):
    raise NotImplementedError()
  UpdateJobState.future = None

def beta_create_Scheduler_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  request_deserializers = {
    ('agro_pb.Scheduler', 'AddTask'): agro_pb2.Task.FromString,
    ('agro_pb.Scheduler', 'GetJobStatus'): agro_pb2.IDQuery.FromString,
    ('agro_pb.Scheduler', 'GetJobToRun'): agro_pb2.JobRequest.FromString,
    ('agro_pb.Scheduler', 'GetTaskStatus'): agro_pb2.IDQuery.FromString,
    ('agro_pb.Scheduler', 'SearchTasks'): agro_pb2.TagArray.FromString,
    ('agro_pb.Scheduler', 'SetJobLogs'): agro_pb2.JobLog.FromString,
    ('agro_pb.Scheduler', 'UpdateJobState'): agro_pb2.UpdateStateRequest.FromString,
  }
  response_serializers = {
    ('agro_pb.Scheduler', 'AddTask'): agro_pb2.TaskStatus.SerializeToString,
    ('agro_pb.Scheduler', 'GetJobStatus'): agro_pb2.JobStatus.SerializeToString,
    ('agro_pb.Scheduler', 'GetJobToRun'): agro_pb2.Job.SerializeToString,
    ('agro_pb.Scheduler', 'GetTaskStatus'): agro_pb2.TaskStatus.SerializeToString,
    ('agro_pb.Scheduler', 'SearchTasks'): agro_pb2.Task.SerializeToString,
    ('agro_pb.Scheduler', 'SetJobLogs'): agro_pb2.JobStatus.SerializeToString,
    ('agro_pb.Scheduler', 'UpdateJobState'): agro_pb2.JobStatus.SerializeToString,
  }
  method_implementations = {
    ('agro_pb.Scheduler', 'AddTask'): face_utilities.unary_unary_inline(servicer.AddTask),
    ('agro_pb.Scheduler', 'GetJobStatus'): face_utilities.unary_stream_inline(servicer.GetJobStatus),
    ('agro_pb.Scheduler', 'GetJobToRun'): face_utilities.unary_stream_inline(servicer.GetJobToRun),
    ('agro_pb.Scheduler', 'GetTaskStatus'): face_utilities.unary_stream_inline(servicer.GetTaskStatus),
    ('agro_pb.Scheduler', 'SearchTasks'): face_utilities.unary_stream_inline(servicer.SearchTasks),
    ('agro_pb.Scheduler', 'SetJobLogs'): face_utilities.unary_unary_inline(servicer.SetJobLogs),
    ('agro_pb.Scheduler', 'UpdateJobState'): face_utilities.unary_unary_inline(servicer.UpdateJobState),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_Scheduler_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  request_serializers = {
    ('agro_pb.Scheduler', 'AddTask'): agro_pb2.Task.SerializeToString,
    ('agro_pb.Scheduler', 'GetJobStatus'): agro_pb2.IDQuery.SerializeToString,
    ('agro_pb.Scheduler', 'GetJobToRun'): agro_pb2.JobRequest.SerializeToString,
    ('agro_pb.Scheduler', 'GetTaskStatus'): agro_pb2.IDQuery.SerializeToString,
    ('agro_pb.Scheduler', 'SearchTasks'): agro_pb2.TagArray.SerializeToString,
    ('agro_pb.Scheduler', 'SetJobLogs'): agro_pb2.JobLog.SerializeToString,
    ('agro_pb.Scheduler', 'UpdateJobState'): agro_pb2.UpdateStateRequest.SerializeToString,
  }
  response_deserializers = {
    ('agro_pb.Scheduler', 'AddTask'): agro_pb2.TaskStatus.FromString,
    ('agro_pb.Scheduler', 'GetJobStatus'): agro_pb2.JobStatus.FromString,
    ('agro_pb.Scheduler', 'GetJobToRun'): agro_pb2.Job.FromString,
    ('agro_pb.Scheduler', 'GetTaskStatus'): agro_pb2.TaskStatus.FromString,
    ('agro_pb.Scheduler', 'SearchTasks'): agro_pb2.Task.FromString,
    ('agro_pb.Scheduler', 'SetJobLogs'): agro_pb2.JobStatus.FromString,
    ('agro_pb.Scheduler', 'UpdateJobState'): agro_pb2.JobStatus.FromString,
  }
  cardinalities = {
    'AddTask': cardinality.Cardinality.UNARY_UNARY,
    'GetJobStatus': cardinality.Cardinality.UNARY_STREAM,
    'GetJobToRun': cardinality.Cardinality.UNARY_STREAM,
    'GetTaskStatus': cardinality.Cardinality.UNARY_STREAM,
    'SearchTasks': cardinality.Cardinality.UNARY_STREAM,
    'SetJobLogs': cardinality.Cardinality.UNARY_UNARY,
    'UpdateJobState': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'agro_pb.Scheduler', cardinalities, options=stub_options)
class EarlyAdopterFileStoreServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def CreateDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def UpdateDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def DeleteDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def CreateFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def WriteFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def CommitFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetFileInfo(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ReadFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def DeleteFile(self, request, context):
    raise NotImplementedError()
class EarlyAdopterFileStoreServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterFileStoreStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def CreateDoc(self, request):
    raise NotImplementedError()
  CreateDoc.async = None
  @abc.abstractmethod
  def GetDoc(self, request):
    raise NotImplementedError()
  GetDoc.async = None
  @abc.abstractmethod
  def UpdateDoc(self, request):
    raise NotImplementedError()
  UpdateDoc.async = None
  @abc.abstractmethod
  def DeleteDoc(self, request):
    raise NotImplementedError()
  DeleteDoc.async = None
  @abc.abstractmethod
  def CreateFile(self, request):
    raise NotImplementedError()
  CreateFile.async = None
  @abc.abstractmethod
  def WriteFile(self, request):
    raise NotImplementedError()
  WriteFile.async = None
  @abc.abstractmethod
  def CommitFile(self, request):
    raise NotImplementedError()
  CommitFile.async = None
  @abc.abstractmethod
  def GetFileInfo(self, request):
    raise NotImplementedError()
  GetFileInfo.async = None
  @abc.abstractmethod
  def ReadFile(self, request):
    raise NotImplementedError()
  ReadFile.async = None
  @abc.abstractmethod
  def DeleteFile(self, request):
    raise NotImplementedError()
  DeleteFile.async = None
def early_adopter_create_FileStore_server(servicer, port, private_key=None, certificate_chain=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  method_service_descriptions = {
    "CommitFile": alpha_utilities.unary_unary_service_description(
      servicer.CommitFile,
      agro_pb2.FileID.FromString,
      agro_pb2.FileState.SerializeToString,
    ),
    "CreateDoc": alpha_utilities.unary_unary_service_description(
      servicer.CreateDoc,
      agro_pb2.Document.FromString,
      agro_pb2.FileState.SerializeToString,
    ),
    "CreateFile": alpha_utilities.unary_unary_service_description(
      servicer.CreateFile,
      agro_pb2.FileInfo.FromString,
      agro_pb2.FileState.SerializeToString,
    ),
    "DeleteDoc": alpha_utilities.unary_unary_service_description(
      servicer.DeleteDoc,
      agro_pb2.FileID.FromString,
      agro_pb2.FileState.SerializeToString,
    ),
    "DeleteFile": alpha_utilities.unary_unary_service_description(
      servicer.DeleteFile,
      agro_pb2.FileID.FromString,
      agro_pb2.FileState.SerializeToString,
    ),
    "GetDoc": alpha_utilities.unary_unary_service_description(
      servicer.GetDoc,
      agro_pb2.FileID.FromString,
      agro_pb2.Document.SerializeToString,
    ),
    "GetFileInfo": alpha_utilities.unary_unary_service_description(
      servicer.GetFileInfo,
      agro_pb2.FileID.FromString,
      agro_pb2.FileInfo.SerializeToString,
    ),
    "ReadFile": alpha_utilities.unary_unary_service_description(
      servicer.ReadFile,
      agro_pb2.ReadRequest.FromString,
      agro_pb2.DataBlock.SerializeToString,
    ),
    "UpdateDoc": alpha_utilities.unary_unary_service_description(
      servicer.UpdateDoc,
      agro_pb2.Document.FromString,
      agro_pb2.FileState.SerializeToString,
    ),
    "WriteFile": alpha_utilities.unary_unary_service_description(
      servicer.WriteFile,
      agro_pb2.DataBlock.FromString,
      agro_pb2.FileState.SerializeToString,
    ),
  }
  return early_adopter_implementations.server("agro_pb.FileStore", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_FileStore_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  method_invocation_descriptions = {
    "CommitFile": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.FileID.SerializeToString,
      agro_pb2.FileState.FromString,
    ),
    "CreateDoc": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.Document.SerializeToString,
      agro_pb2.FileState.FromString,
    ),
    "CreateFile": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.FileInfo.SerializeToString,
      agro_pb2.FileState.FromString,
    ),
    "DeleteDoc": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.FileID.SerializeToString,
      agro_pb2.FileState.FromString,
    ),
    "DeleteFile": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.FileID.SerializeToString,
      agro_pb2.FileState.FromString,
    ),
    "GetDoc": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.FileID.SerializeToString,
      agro_pb2.Document.FromString,
    ),
    "GetFileInfo": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.FileID.SerializeToString,
      agro_pb2.FileInfo.FromString,
    ),
    "ReadFile": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.ReadRequest.SerializeToString,
      agro_pb2.DataBlock.FromString,
    ),
    "UpdateDoc": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.Document.SerializeToString,
      agro_pb2.FileState.FromString,
    ),
    "WriteFile": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.DataBlock.SerializeToString,
      agro_pb2.FileState.FromString,
    ),
  }
  return early_adopter_implementations.stub("agro_pb.FileStore", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)

class BetaFileStoreServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def CreateDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def UpdateDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def DeleteDoc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def CreateFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def WriteFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def CommitFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetFileInfo(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ReadFile(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def DeleteFile(self, request, context):
    raise NotImplementedError()

class BetaFileStoreStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def CreateDoc(self, request, timeout):
    raise NotImplementedError()
  CreateDoc.future = None
  @abc.abstractmethod
  def GetDoc(self, request, timeout):
    raise NotImplementedError()
  GetDoc.future = None
  @abc.abstractmethod
  def UpdateDoc(self, request, timeout):
    raise NotImplementedError()
  UpdateDoc.future = None
  @abc.abstractmethod
  def DeleteDoc(self, request, timeout):
    raise NotImplementedError()
  DeleteDoc.future = None
  @abc.abstractmethod
  def CreateFile(self, request, timeout):
    raise NotImplementedError()
  CreateFile.future = None
  @abc.abstractmethod
  def WriteFile(self, request, timeout):
    raise NotImplementedError()
  WriteFile.future = None
  @abc.abstractmethod
  def CommitFile(self, request, timeout):
    raise NotImplementedError()
  CommitFile.future = None
  @abc.abstractmethod
  def GetFileInfo(self, request, timeout):
    raise NotImplementedError()
  GetFileInfo.future = None
  @abc.abstractmethod
  def ReadFile(self, request, timeout):
    raise NotImplementedError()
  ReadFile.future = None
  @abc.abstractmethod
  def DeleteFile(self, request, timeout):
    raise NotImplementedError()
  DeleteFile.future = None

def beta_create_FileStore_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  request_deserializers = {
    ('agro_pb.FileStore', 'CommitFile'): agro_pb2.FileID.FromString,
    ('agro_pb.FileStore', 'CreateDoc'): agro_pb2.Document.FromString,
    ('agro_pb.FileStore', 'CreateFile'): agro_pb2.FileInfo.FromString,
    ('agro_pb.FileStore', 'DeleteDoc'): agro_pb2.FileID.FromString,
    ('agro_pb.FileStore', 'DeleteFile'): agro_pb2.FileID.FromString,
    ('agro_pb.FileStore', 'GetDoc'): agro_pb2.FileID.FromString,
    ('agro_pb.FileStore', 'GetFileInfo'): agro_pb2.FileID.FromString,
    ('agro_pb.FileStore', 'ReadFile'): agro_pb2.ReadRequest.FromString,
    ('agro_pb.FileStore', 'UpdateDoc'): agro_pb2.Document.FromString,
    ('agro_pb.FileStore', 'WriteFile'): agro_pb2.DataBlock.FromString,
  }
  response_serializers = {
    ('agro_pb.FileStore', 'CommitFile'): agro_pb2.FileState.SerializeToString,
    ('agro_pb.FileStore', 'CreateDoc'): agro_pb2.FileState.SerializeToString,
    ('agro_pb.FileStore', 'CreateFile'): agro_pb2.FileState.SerializeToString,
    ('agro_pb.FileStore', 'DeleteDoc'): agro_pb2.FileState.SerializeToString,
    ('agro_pb.FileStore', 'DeleteFile'): agro_pb2.FileState.SerializeToString,
    ('agro_pb.FileStore', 'GetDoc'): agro_pb2.Document.SerializeToString,
    ('agro_pb.FileStore', 'GetFileInfo'): agro_pb2.FileInfo.SerializeToString,
    ('agro_pb.FileStore', 'ReadFile'): agro_pb2.DataBlock.SerializeToString,
    ('agro_pb.FileStore', 'UpdateDoc'): agro_pb2.FileState.SerializeToString,
    ('agro_pb.FileStore', 'WriteFile'): agro_pb2.FileState.SerializeToString,
  }
  method_implementations = {
    ('agro_pb.FileStore', 'CommitFile'): face_utilities.unary_unary_inline(servicer.CommitFile),
    ('agro_pb.FileStore', 'CreateDoc'): face_utilities.unary_unary_inline(servicer.CreateDoc),
    ('agro_pb.FileStore', 'CreateFile'): face_utilities.unary_unary_inline(servicer.CreateFile),
    ('agro_pb.FileStore', 'DeleteDoc'): face_utilities.unary_unary_inline(servicer.DeleteDoc),
    ('agro_pb.FileStore', 'DeleteFile'): face_utilities.unary_unary_inline(servicer.DeleteFile),
    ('agro_pb.FileStore', 'GetDoc'): face_utilities.unary_unary_inline(servicer.GetDoc),
    ('agro_pb.FileStore', 'GetFileInfo'): face_utilities.unary_unary_inline(servicer.GetFileInfo),
    ('agro_pb.FileStore', 'ReadFile'): face_utilities.unary_unary_inline(servicer.ReadFile),
    ('agro_pb.FileStore', 'UpdateDoc'): face_utilities.unary_unary_inline(servicer.UpdateDoc),
    ('agro_pb.FileStore', 'WriteFile'): face_utilities.unary_unary_inline(servicer.WriteFile),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_FileStore_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  request_serializers = {
    ('agro_pb.FileStore', 'CommitFile'): agro_pb2.FileID.SerializeToString,
    ('agro_pb.FileStore', 'CreateDoc'): agro_pb2.Document.SerializeToString,
    ('agro_pb.FileStore', 'CreateFile'): agro_pb2.FileInfo.SerializeToString,
    ('agro_pb.FileStore', 'DeleteDoc'): agro_pb2.FileID.SerializeToString,
    ('agro_pb.FileStore', 'DeleteFile'): agro_pb2.FileID.SerializeToString,
    ('agro_pb.FileStore', 'GetDoc'): agro_pb2.FileID.SerializeToString,
    ('agro_pb.FileStore', 'GetFileInfo'): agro_pb2.FileID.SerializeToString,
    ('agro_pb.FileStore', 'ReadFile'): agro_pb2.ReadRequest.SerializeToString,
    ('agro_pb.FileStore', 'UpdateDoc'): agro_pb2.Document.SerializeToString,
    ('agro_pb.FileStore', 'WriteFile'): agro_pb2.DataBlock.SerializeToString,
  }
  response_deserializers = {
    ('agro_pb.FileStore', 'CommitFile'): agro_pb2.FileState.FromString,
    ('agro_pb.FileStore', 'CreateDoc'): agro_pb2.FileState.FromString,
    ('agro_pb.FileStore', 'CreateFile'): agro_pb2.FileState.FromString,
    ('agro_pb.FileStore', 'DeleteDoc'): agro_pb2.FileState.FromString,
    ('agro_pb.FileStore', 'DeleteFile'): agro_pb2.FileState.FromString,
    ('agro_pb.FileStore', 'GetDoc'): agro_pb2.Document.FromString,
    ('agro_pb.FileStore', 'GetFileInfo'): agro_pb2.FileInfo.FromString,
    ('agro_pb.FileStore', 'ReadFile'): agro_pb2.DataBlock.FromString,
    ('agro_pb.FileStore', 'UpdateDoc'): agro_pb2.FileState.FromString,
    ('agro_pb.FileStore', 'WriteFile'): agro_pb2.FileState.FromString,
  }
  cardinalities = {
    'CommitFile': cardinality.Cardinality.UNARY_UNARY,
    'CreateDoc': cardinality.Cardinality.UNARY_UNARY,
    'CreateFile': cardinality.Cardinality.UNARY_UNARY,
    'DeleteDoc': cardinality.Cardinality.UNARY_UNARY,
    'DeleteFile': cardinality.Cardinality.UNARY_UNARY,
    'GetDoc': cardinality.Cardinality.UNARY_UNARY,
    'GetFileInfo': cardinality.Cardinality.UNARY_UNARY,
    'ReadFile': cardinality.Cardinality.UNARY_UNARY,
    'UpdateDoc': cardinality.Cardinality.UNARY_UNARY,
    'WriteFile': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'agro_pb.FileStore', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)

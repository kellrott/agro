# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: agro.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='agro.proto',
  package='agro_pb',
  syntax='proto2',
  serialized_pb=b'\n\nagro.proto\x12\x07\x61gro_pb\"\x15\n\x07IDQuery\x12\n\n\x02ID\x18\x01 \x02(\t\"6\n\tJobStatus\x12\n\n\x02ID\x18\x01 \x02(\t\x12\x1d\n\x05State\x18\x02 \x02(\x0e\x32\x0e.agro_pb.State\"o\n\nTaskStatus\x12\n\n\x02ID\x18\x01 \x02(\t\x12\x1d\n\x05State\x18\x02 \x02(\x0e\x32\x0e.agro_pb.State\x12\x14\n\x0c\x43ompletedJob\x18\x06 \x01(\t\x12 \n\x04Runs\x18\x07 \x03(\x0b\x32\x12.agro_pb.JobStatus\"\x89\x01\n\x04Task\x12\n\n\x02ID\x18\x01 \x02(\t\x12\x13\n\x0bTaskDepends\x18\x02 \x03(\t\x12\x13\n\x0b\x44\x61taDepends\x18\x03 \x03(\t\x12\x13\n\x0b\x43ommandLine\x18\x04 \x01(\t\x12\x11\n\tContainer\x18\x05 \x01(\t\x12#\n\x06Status\x18\x06 \x01(\x0b\x32\x13.agro_pb.TaskStatus\"M\n\x03Job\x12\n\n\x02ID\x18\x01 \x02(\t\x12\x1b\n\x04Info\x18\x02 \x02(\x0b\x32\r.agro_pb.Task\x12\x1d\n\x05State\x18\x03 \x02(\x0e\x32\x0e.agro_pb.State\"4\n\x08Workflow\x12\n\n\x02ID\x18\x01 \x02(\t\x12\x1c\n\x05tasks\x18\x02 \x03(\x0b\x32\r.agro_pb.Task\":\n\x0eWorkflowStatus\x12\n\n\x02ID\x18\x01 \x02(\t\x12\x1c\n\x05Tasks\x18\x02 \x03(\x0b\x32\r.agro_pb.Task*L\n\x05State\x12\t\n\x05\x45RROR\x10\x00\x12\x0b\n\x07WAITING\x10\x01\x12\n\n\x06QUEUED\x10\x02\x12\n\n\x06PAUSED\x10\x03\x12\x0b\n\x07RUNNING\x10\x04\x12\x06\n\x02OK\x10\x05\x32\xe7\x01\n\x05Tasks\x12/\n\x07\x41\x64\x64Task\x12\r.agro_pb.Task\x1a\x13.agro_pb.TaskStatus\"\x00\x12;\n\x0b\x41\x64\x64Workflow\x12\x11.agro_pb.Workflow\x1a\x17.agro_pb.WorkflowStatus\"\x00\x12\x38\n\rGetTaskStatus\x12\x10.agro_pb.IDQuery\x1a\x13.agro_pb.TaskStatus\"\x00\x12\x36\n\x0cGetJobStatus\x12\x10.agro_pb.IDQuery\x1a\x12.agro_pb.JobStatus\"\x00'
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='agro_pb.State',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WAITING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUEUED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PAUSED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OK', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=548,
  serialized_end=624,
)
_sym_db.RegisterEnumDescriptor(_STATE)

State = enum_type_wrapper.EnumTypeWrapper(_STATE)
ERROR = 0
WAITING = 1
QUEUED = 2
PAUSED = 3
RUNNING = 4
OK = 5



_IDQUERY = _descriptor.Descriptor(
  name='IDQuery',
  full_name='agro_pb.IDQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='agro_pb.IDQuery.ID', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=44,
)


_JOBSTATUS = _descriptor.Descriptor(
  name='JobStatus',
  full_name='agro_pb.JobStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='agro_pb.JobStatus.ID', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='State', full_name='agro_pb.JobStatus.State', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=100,
)


_TASKSTATUS = _descriptor.Descriptor(
  name='TaskStatus',
  full_name='agro_pb.TaskStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='agro_pb.TaskStatus.ID', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='State', full_name='agro_pb.TaskStatus.State', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CompletedJob', full_name='agro_pb.TaskStatus.CompletedJob', index=2,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Runs', full_name='agro_pb.TaskStatus.Runs', index=3,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=213,
)


_TASK = _descriptor.Descriptor(
  name='Task',
  full_name='agro_pb.Task',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='agro_pb.Task.ID', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='TaskDepends', full_name='agro_pb.Task.TaskDepends', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DataDepends', full_name='agro_pb.Task.DataDepends', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CommandLine', full_name='agro_pb.Task.CommandLine', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Container', full_name='agro_pb.Task.Container', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Status', full_name='agro_pb.Task.Status', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=216,
  serialized_end=353,
)


_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='agro_pb.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='agro_pb.Job.ID', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Info', full_name='agro_pb.Job.Info', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='State', full_name='agro_pb.Job.State', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=355,
  serialized_end=432,
)


_WORKFLOW = _descriptor.Descriptor(
  name='Workflow',
  full_name='agro_pb.Workflow',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='agro_pb.Workflow.ID', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tasks', full_name='agro_pb.Workflow.tasks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=434,
  serialized_end=486,
)


_WORKFLOWSTATUS = _descriptor.Descriptor(
  name='WorkflowStatus',
  full_name='agro_pb.WorkflowStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='agro_pb.WorkflowStatus.ID', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Tasks', full_name='agro_pb.WorkflowStatus.Tasks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=488,
  serialized_end=546,
)

_JOBSTATUS.fields_by_name['State'].enum_type = _STATE
_TASKSTATUS.fields_by_name['State'].enum_type = _STATE
_TASKSTATUS.fields_by_name['Runs'].message_type = _JOBSTATUS
_TASK.fields_by_name['Status'].message_type = _TASKSTATUS
_JOB.fields_by_name['Info'].message_type = _TASK
_JOB.fields_by_name['State'].enum_type = _STATE
_WORKFLOW.fields_by_name['tasks'].message_type = _TASK
_WORKFLOWSTATUS.fields_by_name['Tasks'].message_type = _TASK
DESCRIPTOR.message_types_by_name['IDQuery'] = _IDQUERY
DESCRIPTOR.message_types_by_name['JobStatus'] = _JOBSTATUS
DESCRIPTOR.message_types_by_name['TaskStatus'] = _TASKSTATUS
DESCRIPTOR.message_types_by_name['Task'] = _TASK
DESCRIPTOR.message_types_by_name['Job'] = _JOB
DESCRIPTOR.message_types_by_name['Workflow'] = _WORKFLOW
DESCRIPTOR.message_types_by_name['WorkflowStatus'] = _WORKFLOWSTATUS
DESCRIPTOR.enum_types_by_name['State'] = _STATE

IDQuery = _reflection.GeneratedProtocolMessageType('IDQuery', (_message.Message,), dict(
  DESCRIPTOR = _IDQUERY,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.IDQuery)
  ))
_sym_db.RegisterMessage(IDQuery)

JobStatus = _reflection.GeneratedProtocolMessageType('JobStatus', (_message.Message,), dict(
  DESCRIPTOR = _JOBSTATUS,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.JobStatus)
  ))
_sym_db.RegisterMessage(JobStatus)

TaskStatus = _reflection.GeneratedProtocolMessageType('TaskStatus', (_message.Message,), dict(
  DESCRIPTOR = _TASKSTATUS,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.TaskStatus)
  ))
_sym_db.RegisterMessage(TaskStatus)

Task = _reflection.GeneratedProtocolMessageType('Task', (_message.Message,), dict(
  DESCRIPTOR = _TASK,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.Task)
  ))
_sym_db.RegisterMessage(Task)

Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(
  DESCRIPTOR = _JOB,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.Job)
  ))
_sym_db.RegisterMessage(Job)

Workflow = _reflection.GeneratedProtocolMessageType('Workflow', (_message.Message,), dict(
  DESCRIPTOR = _WORKFLOW,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.Workflow)
  ))
_sym_db.RegisterMessage(Workflow)

WorkflowStatus = _reflection.GeneratedProtocolMessageType('WorkflowStatus', (_message.Message,), dict(
  DESCRIPTOR = _WORKFLOWSTATUS,
  __module__ = 'agro_pb2'
  # @@protoc_insertion_point(class_scope:agro_pb.WorkflowStatus)
  ))
_sym_db.RegisterMessage(WorkflowStatus)


import abc
from grpc.beta import implementations as beta_implementations
from grpc.early_adopter import implementations as early_adopter_implementations
from grpc.framework.alpha import utilities as alpha_utilities
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
class EarlyAdopterTasksServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def AddTask(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def AddWorkflow(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetTaskStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetJobStatus(self, request, context):
    raise NotImplementedError()
class EarlyAdopterTasksServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterTasksStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def AddTask(self, request):
    raise NotImplementedError()
  AddTask.async = None
  @abc.abstractmethod
  def AddWorkflow(self, request):
    raise NotImplementedError()
  AddWorkflow.async = None
  @abc.abstractmethod
  def GetTaskStatus(self, request):
    raise NotImplementedError()
  GetTaskStatus.async = None
  @abc.abstractmethod
  def GetJobStatus(self, request):
    raise NotImplementedError()
  GetJobStatus.async = None
def early_adopter_create_Tasks_server(servicer, port, private_key=None, certificate_chain=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  method_service_descriptions = {
    "AddTask": alpha_utilities.unary_unary_service_description(
      servicer.AddTask,
      agro_pb2.Task.FromString,
      agro_pb2.TaskStatus.SerializeToString,
    ),
    "AddWorkflow": alpha_utilities.unary_unary_service_description(
      servicer.AddWorkflow,
      agro_pb2.Workflow.FromString,
      agro_pb2.WorkflowStatus.SerializeToString,
    ),
    "GetJobStatus": alpha_utilities.unary_unary_service_description(
      servicer.GetJobStatus,
      agro_pb2.IDQuery.FromString,
      agro_pb2.JobStatus.SerializeToString,
    ),
    "GetTaskStatus": alpha_utilities.unary_unary_service_description(
      servicer.GetTaskStatus,
      agro_pb2.IDQuery.FromString,
      agro_pb2.TaskStatus.SerializeToString,
    ),
  }
  return early_adopter_implementations.server("agro_pb.Tasks", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_Tasks_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  method_invocation_descriptions = {
    "AddTask": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.Task.SerializeToString,
      agro_pb2.TaskStatus.FromString,
    ),
    "AddWorkflow": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.Workflow.SerializeToString,
      agro_pb2.WorkflowStatus.FromString,
    ),
    "GetJobStatus": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.IDQuery.SerializeToString,
      agro_pb2.JobStatus.FromString,
    ),
    "GetTaskStatus": alpha_utilities.unary_unary_invocation_description(
      agro_pb2.IDQuery.SerializeToString,
      agro_pb2.TaskStatus.FromString,
    ),
  }
  return early_adopter_implementations.stub("agro_pb.Tasks", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)

class BetaTasksServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def AddTask(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def AddWorkflow(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetTaskStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetJobStatus(self, request, context):
    raise NotImplementedError()

class BetaTasksStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def AddTask(self, request, timeout):
    raise NotImplementedError()
  AddTask.future = None
  @abc.abstractmethod
  def AddWorkflow(self, request, timeout):
    raise NotImplementedError()
  AddWorkflow.future = None
  @abc.abstractmethod
  def GetTaskStatus(self, request, timeout):
    raise NotImplementedError()
  GetTaskStatus.future = None
  @abc.abstractmethod
  def GetJobStatus(self, request, timeout):
    raise NotImplementedError()
  GetJobStatus.future = None

def beta_create_Tasks_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  request_deserializers = {
    ('agro_pb.Tasks', 'AddTask'): agro_pb2.Task.FromString,
    ('agro_pb.Tasks', 'AddWorkflow'): agro_pb2.Workflow.FromString,
    ('agro_pb.Tasks', 'GetJobStatus'): agro_pb2.IDQuery.FromString,
    ('agro_pb.Tasks', 'GetTaskStatus'): agro_pb2.IDQuery.FromString,
  }
  response_serializers = {
    ('agro_pb.Tasks', 'AddTask'): agro_pb2.TaskStatus.SerializeToString,
    ('agro_pb.Tasks', 'AddWorkflow'): agro_pb2.WorkflowStatus.SerializeToString,
    ('agro_pb.Tasks', 'GetJobStatus'): agro_pb2.JobStatus.SerializeToString,
    ('agro_pb.Tasks', 'GetTaskStatus'): agro_pb2.TaskStatus.SerializeToString,
  }
  method_implementations = {
    ('agro_pb.Tasks', 'AddTask'): face_utilities.unary_unary_inline(servicer.AddTask),
    ('agro_pb.Tasks', 'AddWorkflow'): face_utilities.unary_unary_inline(servicer.AddWorkflow),
    ('agro_pb.Tasks', 'GetJobStatus'): face_utilities.unary_unary_inline(servicer.GetJobStatus),
    ('agro_pb.Tasks', 'GetTaskStatus'): face_utilities.unary_unary_inline(servicer.GetTaskStatus),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_Tasks_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  import agro_pb2
  request_serializers = {
    ('agro_pb.Tasks', 'AddTask'): agro_pb2.Task.SerializeToString,
    ('agro_pb.Tasks', 'AddWorkflow'): agro_pb2.Workflow.SerializeToString,
    ('agro_pb.Tasks', 'GetJobStatus'): agro_pb2.IDQuery.SerializeToString,
    ('agro_pb.Tasks', 'GetTaskStatus'): agro_pb2.IDQuery.SerializeToString,
  }
  response_deserializers = {
    ('agro_pb.Tasks', 'AddTask'): agro_pb2.TaskStatus.FromString,
    ('agro_pb.Tasks', 'AddWorkflow'): agro_pb2.WorkflowStatus.FromString,
    ('agro_pb.Tasks', 'GetJobStatus'): agro_pb2.JobStatus.FromString,
    ('agro_pb.Tasks', 'GetTaskStatus'): agro_pb2.TaskStatus.FromString,
  }
  cardinalities = {
    'AddTask': cardinality.Cardinality.UNARY_UNARY,
    'AddWorkflow': cardinality.Cardinality.UNARY_UNARY,
    'GetJobStatus': cardinality.Cardinality.UNARY_UNARY,
    'GetTaskStatus': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'agro_pb.Tasks', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
